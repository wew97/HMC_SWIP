// 5_const.cpp
#include <iostream>
using namespace std;

#if 0
int main()
{
    // const int c;
    // C++에서 상수는 반드시 초기화가 필요합니다.

    const int x = 42;
    // x는 초기화 이후에 값을 변경할 수 없습니다.
    // x = 100;
}
#endif

// C의 상수와 C++의 상수는 차이가 있습니다.
// 1) 상수 표현식
//   : 컴파일러가 미리 계산할 수 있으면, 계산해서 기계어를 생성합니다.

// 2) C++의 const 변수가 컴파일 타임에 초기값이 결정된다면,
//    컴파일러는 해당 상수를 상수 표현식으로 취급합니다.
//    상수에 대한 모든 접근이 메모리를 사용하지 않습니다.

//    C++11, 상수 표현식에 사용할 수 있는 키워드가 추가되었습니다.
//     : constexpr

int main()
{
    // constexpr const int c1 = 100; // 컴파일 타임 상수
    constexpr int c1 = 100;
    int x = c1 + 1000;
    // c1은 컴파일 타임에 컴파일러가 상수의 값을 알 수 있지만,
    // c2는 컴파일 타임에 변수를 통해 초기화되고 있으므로,
    // 실행시간에 x가 어떤 값을 가지는지 컴파일러는 알 수 없습니다.
    // c1에 대한 접근은 메모리를 사용하지 않지만,
    // c2에 대한 접근은 메모리를 통해 관리되어야 합니다.

    const int c2 = x; // 런타임 상수
    int x2 = c2 + 1000;
}

#if 0
int main()
{
    int a = 10 + 100;

    int x[3] = { 10, 20, 30 };
    int b = sizeof(x) + sizeof(a);
}
#endif
